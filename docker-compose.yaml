version: "3.9"

services:
  db:
    image: postgres:17-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
    volumes:
      - medusa-db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7.2
    ports:
      - "6380:6380"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  medusa:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        DATABASE_URL: ${DATABASE_URL}
        REDIS_URL: ${REDIS_URL}
        WORKER_MODE: ${WORKER_MODE:-server}
        COOKIE_SECRET: ${COOKIE_SECRET}
        JWT_SECRET: ${JWT_SECRET}
        STORE_CORS: ${STORE_CORS}
        ADMIN_CORS: ${ADMIN_CORS}
        AUTH_CORS: ${AUTH_CORS}
        PORT: ${PORT:-9000}
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - WORKER_MODE=${WORKER_MODE:-server}
      - COOKIE_SECRET=${COOKIE_SECRET}
      - JWT_SECRET=${JWT_SECRET}
      - STORE_CORS=${STORE_CORS}
      - ADMIN_CORS=${ADMIN_CORS}
      - AUTH_CORS=${AUTH_CORS}
      - PORT=${PORT:-9000}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB:-postgres}
    ports:
      - "${PORT:-9000}:9000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: ["./entrypoint.sh"]
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 120s

volumes:
  medusa-db-data:
