version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: medusa-postgres
    environment:
      POSTGRES_DB: medusa_db
      POSTGRES_USER: medusa_user
      POSTGRES_PASSWORD: medusa_secure_password_123
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - dokploy
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U medusa_user -d medusa_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: medusa-redis
    networks:
      - dokploy
    ports:
      - "6379:6379"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: medusa-backend
    environment:
      DATABASE_URL: postgres://medusa_user:medusa_secure_password_123@postgres:5432/medusa_db
      REDIS_URL: redis://redis:6379
      JWT_SECRET: GUA6uNfbbl9nksLumoVc0VulzElEEqbqC6zsaYBAF0c=
      COOKIE_SECRET: fvYJhZmUuMRcdjjZi2+OHK+xK0Fqsr9KMA2hLqcqEo8=
      MEDUSA_ADMIN_ONBOARDING_TYPE: default
      NODE_ENV: production
      PORT: 3000
      WORKER_MODE: shared
      # CORS settings
      STORE_CORS: http://localhost:3001,https://your-storefront-domain.com
      ADMIN_CORS: http://localhost:3000,https://your-backend-domain.com
      AUTH_CORS: http://localhost:3000,https://your-backend-domain.com
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - dokploy
    ports:
      - "3000:3000"
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`medusa-backend.${DOKPLOY_DOMAIN:-localhost}`)"
      - "traefik.http.services.backend.loadbalancer.server.port=3000"
      - "traefik.http.routers.backend.entrypoints=web,websecure"
      - "traefik.http.routers.backend.tls.certresolver=letsencrypt"

  storefront:
    build: 
      context: ./storefront
      dockerfile: Dockerfile
    container_name: medusa-storefront
    environment:
      NEXT_PUBLIC_MEDUSA_BACKEND_URL: https://medusa-backend.${DOKPLOY_DOMAIN:-localhost}
      NEXT_PUBLIC_MEDUSA_PUBLISHABLE_KEY: pk_01JH9Q2V8X3K4M5N6P7R8S9T0U
      NODE_ENV: production
      PORT: 3001
    depends_on:
      - backend
    networks:
      - dokploy
    ports:
      - "3001:3001"
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.storefront.rule=Host(`medusa-store.${DOKPLOY_DOMAIN:-localhost}`)"
      - "traefik.http.services.storefront.loadbalancer.server.port=3001"
      - "traefik.http.routers.storefront.entrypoints=web,websecure"
      - "traefik.http.routers.storefront.tls.certresolver=letsencrypt"

volumes:
  postgres_data:
    driver: local

networks:
  dokploy:
    external: true