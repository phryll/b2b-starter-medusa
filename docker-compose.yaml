version: "3.9"

services:
  db:
    image: postgres:17-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - medusa-db-data:/var/lib/postgresql/data

  redis:
    image: redis:7.2
    ports:
      - "6380:6380"

  medusa:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        DATABASE_URL: ${DATABASEURL}
        REDIS_URL: ${REDISURL}
        WORKER_MODE: ${WORKER_MODE}
        COOKIE_SECRET: ${COOKIE_SECRET}
        JWT_SECRET: ${JWT_SECRET}
        STORE_CORS: ${STORE_CORS}
        ADMIN_CORS: ${ADMIN_CORS}
        AUTH_CORS: ${AUTH_CORS}
        PORT: ${PORT}
    environment:
      - DATABASE_URL=${DATABASEURL}
      - REDIS_URL=${REDISURL}
      - WORKER_MODE=${WORKER_MODE}
      - COOKIE_SECRET=${COOKIE_SECRET}
      - JWT_SECRET=${JWT_SECRET}
      - STORE_CORS=${STORE_CORS}
      - ADMIN_CORS=${ADMIN_CORS}
      - AUTH_CORS=${AUTH_CORS}
      - PORT=${PORT}
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    ports:
      - "${PORT}:9000"
    depends_on:
      - db
      - redis
    command: ["./entrypoint.sh"]
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "ps aux | grep 'medusa start' | grep -v grep || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 90s

volumes:
  medusa-db-data:
