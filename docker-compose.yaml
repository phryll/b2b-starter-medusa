services:
  postgres:
    image: postgres:15-alpine
    container_name: medusa-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-medusa_db}
      POSTGRES_USER: ${POSTGRES_USER:-nodejs}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    networks:
      - medusa_network
    healthcheck:
      test: ["CMD", "pg_isready -U ${POSTGRES_USER:-nodejs} -d ${POSTGRES_DB:-medusa_db}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: medusa-redis
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-6379}:6379"
    networks:
      - medusa_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: medusa-backend
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgres://${POSTGRES_USER:-nodejs}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB:-medusa_db}?sslmode=disable
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=${JWT_SECRET}
      - COOKIE_SECRET=${COOKIE_SECRET}
      - PORT=9000
    ports:
      - "${BACKEND_PORT:-9000}:9000"
    networks:
      - medusa_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/health"]
      interval: 30s
      timeout: 10s
      start_period: 180s
      retries: 5

  storefront:
    build:
      context: ./storefront
      dockerfile: Dockerfile
    container_name: medusa-storefront
    restart: unless-stopped
    depends_on:
      backend:
        condition: service_healthy
    environment:
      - NEXT_PUBLIC_MEDUSA_BACKEND_URL=${PUBLIC_BACKEND_URL:-http://backend:9000}
      - NEXT_PUBLIC_MEDUSA_PUBLISHABLE_KEY=${MEDUSA_PUBLISHABLE_KEY}
      - NODE_ENV=production
      - PORT=3001
    ports:
      - "${STOREFRONT_PORT:-3001}:3001"
    networks:
      - medusa_network

volumes:
  postgres_data:
    driver: local

networks:
  medusa_network:
    driver: bridge