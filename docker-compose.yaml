services:
  postgres:
    image: postgres:15-alpine
    container_name: medusa-postgres
    environment:
      POSTGRES_DB: medusa_db
      POSTGRES_USER: medusa_user
      POSTGRES_PASSWORD: medusa_secure_password_123
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U medusa_user -d medusa_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: medusa-redis
    ports:
      - "6379:6379"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          cpus: '0.25'
          memory: 128M
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: medusa-backend
    environment:
      DATABASE_URL: postgres://medusa_user:medusa_secure_password_123@postgres:5432/medusa_db
      REDIS_URL: redis://redis:6379
      JWT_SECRET: GUA6uNfbbl9nksLumoVc0VulzElEEqbqC6zsaYBAF0c=
      COOKIE_SECRET: fvYJhZmUuMRcdjjZi2+OHK+xK0Fqsr9KMA2hLqcqEo8=
      MEDUSA_ADMIN_ONBOARDING_TYPE: default
      NODE_ENV: production
      PORT: 3000
      WORKER_MODE: shared
      NODE_OPTIONS: "--max-old-space-size=1536"
      STORE_CORS: "*"
      ADMIN_CORS: "*"
      AUTH_CORS: "*"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "3000:3000"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1.5G
        reservations:
          cpus: '0.5'
          memory: 768M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      start_period: 180s
      retries: 10

  storefront:
    build: 
      context: ./storefront
      dockerfile: Dockerfile
    container_name: medusa-storefront
    environment:
      NEXT_PUBLIC_MEDUSA_BACKEND_URL: http://backend:3000
      NEXT_PUBLIC_MEDUSA_PUBLISHABLE_KEY: pk_placeholder_will_update_after_deployment
      NODE_ENV: production
      PORT: 3001
      NODE_OPTIONS: "--max-old-space-size=1024"
    depends_on:
      backend:
        condition: service_healthy
    ports:
      - "3001:3001"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
        reservations:
          cpus: '0.25'
          memory: 512M

volumes:
  postgres_data:
    driver: local